--
-- PostgreSQL database cluster dump
--

SET default_transaction_read_only = off;

SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;

--
-- Drop databases (except postgres and template1)
--

DROP DATABASE expressionism;




--
-- Drop roles
--

DROP ROLE postgres;


--
-- Roles
--

CREATE ROLE postgres;
ALTER ROLE postgres WITH SUPERUSER INHERIT CREATEROLE CREATEDB LOGIN REPLICATION BYPASSRLS PASSWORD 'md5f669773c3bc40401c00685cf2f9c4ca2';






--
-- Databases
--

--
-- Database "template1" dump
--

--
-- PostgreSQL database dump
--

-- Dumped from database version 13.10 (Debian 13.10-1.pgdg110+1)
-- Dumped by pg_dump version 13.10 (Debian 13.10-1.pgdg110+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

UPDATE pg_catalog.pg_database SET datistemplate = false WHERE datname = 'template1';
DROP DATABASE template1;
--
-- Name: template1; Type: DATABASE; Schema: -; Owner: postgres
--

CREATE DATABASE template1 WITH TEMPLATE = template0 ENCODING = 'UTF8' LOCALE = 'en_US.utf8';


ALTER DATABASE template1 OWNER TO postgres;

\connect template1

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: DATABASE template1; Type: COMMENT; Schema: -; Owner: postgres
--

COMMENT ON DATABASE template1 IS 'default template for new databases';


--
-- Name: template1; Type: DATABASE PROPERTIES; Schema: -; Owner: postgres
--

ALTER DATABASE template1 IS_TEMPLATE = true;


\connect template1

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: DATABASE template1; Type: ACL; Schema: -; Owner: postgres
--

REVOKE CONNECT,TEMPORARY ON DATABASE template1 FROM PUBLIC;
GRANT CONNECT ON DATABASE template1 TO PUBLIC;


--
-- PostgreSQL database dump complete
--

--
-- Database "expressionism" dump
--

--
-- PostgreSQL database dump
--

-- Dumped from database version 13.10 (Debian 13.10-1.pgdg110+1)
-- Dumped by pg_dump version 13.10 (Debian 13.10-1.pgdg110+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: expressionism; Type: DATABASE; Schema: -; Owner: postgres
--

CREATE DATABASE expressionism WITH TEMPLATE = template0 ENCODING = 'UTF8' LOCALE = 'en_US.utf8';


ALTER DATABASE expressionism OWNER TO postgres;

\connect expressionism

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: alembic_version; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.alembic_version (
    version_num character varying(32) NOT NULL
);


ALTER TABLE public.alembic_version OWNER TO postgres;

--
-- Name: course_variant; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.course_variant (
    id integer NOT NULL,
    discipline_id integer NOT NULL,
    name character varying(80) NOT NULL
);


ALTER TABLE public.course_variant OWNER TO postgres;

--
-- Name: course_variant_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.course_variant_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.course_variant_id_seq OWNER TO postgres;

--
-- Name: course_variant_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.course_variant_id_seq OWNED BY public.course_variant.id;


--
-- Name: discipline; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.discipline (
    id integer NOT NULL,
    name character varying(80) NOT NULL
);


ALTER TABLE public.discipline OWNER TO postgres;

--
-- Name: discipline_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.discipline_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.discipline_id_seq OWNER TO postgres;

--
-- Name: discipline_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.discipline_id_seq OWNED BY public.discipline.id;


--
-- Name: generation_result; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.generation_result (
    id integer NOT NULL,
    task_id integer NOT NULL,
    name character varying(80) NOT NULL,
    created_at timestamp without time zone NOT NULL,
    issued boolean NOT NULL,
    results text NOT NULL
);


ALTER TABLE public.generation_result OWNER TO postgres;

--
-- Name: generation_result_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.generation_result_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.generation_result_id_seq OWNER TO postgres;

--
-- Name: generation_result_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.generation_result_id_seq OWNED BY public.generation_result.id;


--
-- Name: generation_variant; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.generation_variant (
    id integer NOT NULL,
    result_id integer NOT NULL
);


ALTER TABLE public.generation_variant OWNER TO postgres;

--
-- Name: generation_variant_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.generation_variant_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.generation_variant_id_seq OWNER TO postgres;

--
-- Name: generation_variant_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.generation_variant_id_seq OWNED BY public.generation_variant.id;


--
-- Name: generator; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.generator (
    id integer NOT NULL,
    topic_id integer NOT NULL,
    name character varying(120) NOT NULL,
    task_text character varying(120),
    variables text,
    coefficients text,
    restricts text,
    content text
);


ALTER TABLE public.generator OWNER TO postgres;

--
-- Name: generator_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.generator_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.generator_id_seq OWNER TO postgres;

--
-- Name: generator_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.generator_id_seq OWNED BY public.generator.id;


--
-- Name: layout_variant_1; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.layout_variant_1 (
    id integer NOT NULL,
    template_lvl1_id integer,
    is_active boolean,
    css_style text NOT NULL,
    html text NOT NULL
);


ALTER TABLE public.layout_variant_1 OWNER TO postgres;

--
-- Name: layout_variant_1_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.layout_variant_1_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.layout_variant_1_id_seq OWNER TO postgres;

--
-- Name: layout_variant_1_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.layout_variant_1_id_seq OWNED BY public.layout_variant_1.id;


--
-- Name: layout_variant_2; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.layout_variant_2 (
    id integer NOT NULL,
    template_lvl2_id integer,
    is_active boolean,
    css_style text NOT NULL,
    html text NOT NULL
);


ALTER TABLE public.layout_variant_2 OWNER TO postgres;

--
-- Name: layout_variant_2_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.layout_variant_2_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.layout_variant_2_id_seq OWNER TO postgres;

--
-- Name: layout_variant_2_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.layout_variant_2_id_seq OWNED BY public.layout_variant_2.id;


--
-- Name: layout_variant_3; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.layout_variant_3 (
    id integer NOT NULL,
    template_lvl2_id integer,
    is_active boolean,
    css_style text NOT NULL,
    html text NOT NULL
);


ALTER TABLE public.layout_variant_3 OWNER TO postgres;

--
-- Name: layout_variant_3_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.layout_variant_3_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.layout_variant_3_id_seq OWNER TO postgres;

--
-- Name: layout_variant_3_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.layout_variant_3_id_seq OWNED BY public.layout_variant_3.id;


--
-- Name: lvl1; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lvl1 (
    id integer NOT NULL,
    name character varying,
    level integer
);


ALTER TABLE public.lvl1 OWNER TO postgres;

--
-- Name: lvl1_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lvl1_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lvl1_id_seq OWNER TO postgres;

--
-- Name: lvl1_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lvl1_id_seq OWNED BY public.lvl1.id;


--
-- Name: lvl2; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lvl2 (
    id integer NOT NULL,
    name character varying
);


ALTER TABLE public.lvl2 OWNER TO postgres;

--
-- Name: lvl2_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lvl2_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lvl2_id_seq OWNER TO postgres;

--
-- Name: lvl2_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lvl2_id_seq OWNED BY public.lvl2.id;


--
-- Name: lvl3; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lvl3 (
    id integer NOT NULL,
    name character varying
);


ALTER TABLE public.lvl3 OWNER TO postgres;

--
-- Name: lvl3_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lvl3_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lvl3_id_seq OWNER TO postgres;

--
-- Name: lvl3_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lvl3_id_seq OWNED BY public.lvl3.id;


--
-- Name: placeholder_match; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.placeholder_match (
    id integer NOT NULL,
    code character varying NOT NULL
);


ALTER TABLE public.placeholder_match OWNER TO postgres;

--
-- Name: placeholder_match_atoms; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.placeholder_match_atoms (
    id integer NOT NULL,
    code character varying NOT NULL
);


ALTER TABLE public.placeholder_match_atoms OWNER TO postgres;

--
-- Name: placeholder_match_atoms_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.placeholder_match_atoms_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.placeholder_match_atoms_id_seq OWNER TO postgres;

--
-- Name: placeholder_match_atoms_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.placeholder_match_atoms_id_seq OWNED BY public.placeholder_match_atoms.id;


--
-- Name: placeholder_match_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.placeholder_match_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.placeholder_match_id_seq OWNER TO postgres;

--
-- Name: placeholder_match_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.placeholder_match_id_seq OWNED BY public.placeholder_match.id;


--
-- Name: placeholder_match_lvl2; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.placeholder_match_lvl2 (
    placeholder_match_id integer,
    lvl2_id integer
);


ALTER TABLE public.placeholder_match_lvl2 OWNER TO postgres;

--
-- Name: placeholder_match_lvl3; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.placeholder_match_lvl3 (
    placeholder_match_atoms_id integer,
    lvl3_id integer
);


ALTER TABLE public.placeholder_match_lvl3 OWNER TO postgres;

--
-- Name: section; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.section (
    id integer NOT NULL,
    discipline_id integer NOT NULL,
    name character varying(80) NOT NULL
);


ALTER TABLE public.section OWNER TO postgres;

--
-- Name: section_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.section_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.section_id_seq OWNER TO postgres;

--
-- Name: section_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.section_id_seq OWNED BY public.section.id;


--
-- Name: task; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.task (
    id integer NOT NULL,
    topic_id integer NOT NULL,
    name character varying(120) NOT NULL,
    task_type_id integer NOT NULL,
    course_variant_id integer NOT NULL
);


ALTER TABLE public.task OWNER TO postgres;

--
-- Name: task_generator; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.task_generator (
    id integer NOT NULL,
    task_id integer NOT NULL,
    generator_id integer NOT NULL
);


ALTER TABLE public.task_generator OWNER TO postgres;

--
-- Name: task_generator_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.task_generator_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.task_generator_id_seq OWNER TO postgres;

--
-- Name: task_generator_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.task_generator_id_seq OWNED BY public.task_generator.id;


--
-- Name: task_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.task_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.task_id_seq OWNER TO postgres;

--
-- Name: task_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.task_id_seq OWNED BY public.task.id;


--
-- Name: task_type; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.task_type (
    id integer NOT NULL,
    name character varying(80) NOT NULL
);


ALTER TABLE public.task_type OWNER TO postgres;

--
-- Name: task_type_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.task_type_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.task_type_id_seq OWNER TO postgres;

--
-- Name: task_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.task_type_id_seq OWNED BY public.task_type.id;


--
-- Name: template; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.template (
    id integer NOT NULL,
    name character varying
);


ALTER TABLE public.template OWNER TO postgres;

--
-- Name: template_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.template_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.template_id_seq OWNER TO postgres;

--
-- Name: template_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.template_id_seq OWNED BY public.template.id;


--
-- Name: template_lvl1; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.template_lvl1 (
    id integer NOT NULL,
    template_id integer,
    lvl1_id integer,
    always_eat boolean
);


ALTER TABLE public.template_lvl1 OWNER TO postgres;

--
-- Name: template_lvl1_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.template_lvl1_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.template_lvl1_id_seq OWNER TO postgres;

--
-- Name: template_lvl1_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.template_lvl1_id_seq OWNED BY public.template_lvl1.id;


--
-- Name: template_lvl2; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.template_lvl2 (
    id integer NOT NULL,
    template_lvl1_id integer,
    lvl2_id integer,
    max_count_y integer,
    min_count_y integer,
    max_count_x integer,
    min_count_x integer,
    always_eat boolean
);


ALTER TABLE public.template_lvl2 OWNER TO postgres;

--
-- Name: template_lvl2_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.template_lvl2_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.template_lvl2_id_seq OWNER TO postgres;

--
-- Name: template_lvl2_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.template_lvl2_id_seq OWNED BY public.template_lvl2.id;


--
-- Name: template_lvl3; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.template_lvl3 (
    id integer NOT NULL,
    template_lvl2_id integer,
    lvl3_id integer,
    always_eat boolean
);


ALTER TABLE public.template_lvl3 OWNER TO postgres;

--
-- Name: template_lvl3_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.template_lvl3_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.template_lvl3_id_seq OWNER TO postgres;

--
-- Name: template_lvl3_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.template_lvl3_id_seq OWNED BY public.template_lvl3.id;


--
-- Name: topic; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.topic (
    id integer NOT NULL,
    section_id integer NOT NULL,
    name character varying(80) NOT NULL
);


ALTER TABLE public.topic OWNER TO postgres;

--
-- Name: topic_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.topic_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.topic_id_seq OWNER TO postgres;

--
-- Name: topic_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.topic_id_seq OWNED BY public.topic.id;


--
-- Name: users; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.users (
    id integer NOT NULL,
    username character varying(80) NOT NULL,
    password_hash character varying(120) NOT NULL
);


ALTER TABLE public.users OWNER TO postgres;

--
-- Name: users_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.users_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.users_id_seq OWNER TO postgres;

--
-- Name: users_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.users_id_seq OWNED BY public.users.id;


--
-- Name: course_variant id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.course_variant ALTER COLUMN id SET DEFAULT nextval('public.course_variant_id_seq'::regclass);


--
-- Name: discipline id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.discipline ALTER COLUMN id SET DEFAULT nextval('public.discipline_id_seq'::regclass);


--
-- Name: generation_result id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.generation_result ALTER COLUMN id SET DEFAULT nextval('public.generation_result_id_seq'::regclass);


--
-- Name: generation_variant id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.generation_variant ALTER COLUMN id SET DEFAULT nextval('public.generation_variant_id_seq'::regclass);


--
-- Name: generator id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.generator ALTER COLUMN id SET DEFAULT nextval('public.generator_id_seq'::regclass);


--
-- Name: layout_variant_1 id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.layout_variant_1 ALTER COLUMN id SET DEFAULT nextval('public.layout_variant_1_id_seq'::regclass);


--
-- Name: layout_variant_2 id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.layout_variant_2 ALTER COLUMN id SET DEFAULT nextval('public.layout_variant_2_id_seq'::regclass);


--
-- Name: layout_variant_3 id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.layout_variant_3 ALTER COLUMN id SET DEFAULT nextval('public.layout_variant_3_id_seq'::regclass);


--
-- Name: lvl1 id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lvl1 ALTER COLUMN id SET DEFAULT nextval('public.lvl1_id_seq'::regclass);


--
-- Name: lvl2 id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lvl2 ALTER COLUMN id SET DEFAULT nextval('public.lvl2_id_seq'::regclass);


--
-- Name: lvl3 id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lvl3 ALTER COLUMN id SET DEFAULT nextval('public.lvl3_id_seq'::regclass);


--
-- Name: placeholder_match id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.placeholder_match ALTER COLUMN id SET DEFAULT nextval('public.placeholder_match_id_seq'::regclass);


--
-- Name: placeholder_match_atoms id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.placeholder_match_atoms ALTER COLUMN id SET DEFAULT nextval('public.placeholder_match_atoms_id_seq'::regclass);


--
-- Name: section id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.section ALTER COLUMN id SET DEFAULT nextval('public.section_id_seq'::regclass);


--
-- Name: task id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.task ALTER COLUMN id SET DEFAULT nextval('public.task_id_seq'::regclass);


--
-- Name: task_generator id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.task_generator ALTER COLUMN id SET DEFAULT nextval('public.task_generator_id_seq'::regclass);


--
-- Name: task_type id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.task_type ALTER COLUMN id SET DEFAULT nextval('public.task_type_id_seq'::regclass);


--
-- Name: template id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.template ALTER COLUMN id SET DEFAULT nextval('public.template_id_seq'::regclass);


--
-- Name: template_lvl1 id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.template_lvl1 ALTER COLUMN id SET DEFAULT nextval('public.template_lvl1_id_seq'::regclass);


--
-- Name: template_lvl2 id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.template_lvl2 ALTER COLUMN id SET DEFAULT nextval('public.template_lvl2_id_seq'::regclass);


--
-- Name: template_lvl3 id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.template_lvl3 ALTER COLUMN id SET DEFAULT nextval('public.template_lvl3_id_seq'::regclass);


--
-- Name: topic id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.topic ALTER COLUMN id SET DEFAULT nextval('public.topic_id_seq'::regclass);


--
-- Name: users id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users ALTER COLUMN id SET DEFAULT nextval('public.users_id_seq'::regclass);


--
-- Data for Name: alembic_version; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.alembic_version (version_num) FROM stdin;
68154d397166
\.


--
-- Data for Name: course_variant; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.course_variant (id, discipline_id, name) FROM stdin;
\.


--
-- Data for Name: discipline; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.discipline (id, name) FROM stdin;
\.


--
-- Data for Name: generation_result; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.generation_result (id, task_id, name, created_at, issued, results) FROM stdin;
\.


--
-- Data for Name: generation_variant; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.generation_variant (id, result_id) FROM stdin;
\.


--
-- Data for Name: generator; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.generator (id, topic_id, name, task_text, variables, coefficients, restricts, content) FROM stdin;
\.


--
-- Data for Name: layout_variant_1; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.layout_variant_1 (id, template_lvl1_id, is_active, css_style, html) FROM stdin;
1	1	t	/* Сброс отступов */\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  font-family: sans-serif;\r\n}\r\n\r\n/* Шапка */\r\n.header {\r\n  background-color: #fff;\r\n  padding: 16px 32px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n/* Логотип */\r\n.logo {\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n  color: #333;\r\n}\r\n\r\n/* Навигация */\r\n.nav {\r\n  display: flex;\r\n  gap: 24px;\r\n}\r\n\r\n.nav a {\r\n  text-decoration: none;\r\n  color: #555;\r\n  transition: color 0.3s;\r\n}\r\n\r\n.nav a:hover {\r\n  color: #007BFF;\r\n}\r\n\r\n/* Кнопка входа */\r\n.login-btn {\r\n  background-color: #007BFF;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.login-btn:hover {\r\n  background-color: #0056b3;\r\n}\r\n	<header class="header">\r\n  #LOGO#\r\n  <nav class="nav">\r\n    #NAV#\r\n  </nav>\r\n  #END_OF_CONT#\r\n</header>\r\n
2	1	t	.asym-header {\r\n  position: relative;\r\n  height: 80px;\r\n  background: #ffffff;\r\n  overflow: hidden;\r\n  box-shadow: 0 4px 8px rgba(0,0,0,0.1);\r\n}\r\n\r\n/* Геометрический фон */\r\n.asym-header::before {\r\n  content: "";\r\n  position: absolute;\r\n  top: -20px;\r\n  right: -100px;\r\n  width: 300px;\r\n  height: 150px;\r\n  background: #ff6f61;\r\n  transform: rotate(25deg);\r\n  border-radius: 20px;\r\n  z-index: 0;\r\n}\r\n\r\n/* Логотип у краю */\r\n.asym-logo {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 32px;\r\n  transform: translateY(-50%);\r\n  z-index: 1;\r\n}\r\n\r\n/* Основной блок с навигацией и контактами */\r\n.asym-main {\r\n  position: absolute;\r\n  top: 0;\r\n  right: 32px;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 24px;\r\n  z-index: 1;\r\n}\r\n\r\n/* Навигация — вертикальные пункты */\r\n.asym-nav a {\r\n  display: inline-block;\r\n  margin-right: 16px;\r\n  text-decoration: none;\r\n  color: #333;\r\n  font-weight: 500;\r\n  padding: 8px;\r\n  border-radius: 4px;\r\n  transition: background 0.2s, color 0.2s;\r\n}\r\n.asym-nav a:hover {\r\n  background: #ff6f61;\r\n  color: #fff;\r\n}\r\n\r\n/* Кнопки контактов */\r\n.asym-contact button {\r\n  background: #333;\r\n  border: none;\r\n  color: #fff;\r\n  padding: 8px 16px;\r\n  border-radius: 50px;\r\n  font-size: 0.9rem;\r\n  cursor: pointer;\r\n  transition: transform 0.2s;\r\n}\r\n.asym-contact button:hover {\r\n  transform: scale(1.05);\r\n}\r\n	<header class="asym-header">\r\n  <div class="asym-logo">\r\n    #LOGO#\r\n  </div>\r\n\r\n  <div class="asym-main">\r\n    <nav class="asym-nav">\r\n      #NAV#\r\n    </nav>\r\n    <div class="asym-contact">\r\n      #CONTACT#\r\n    </div>\r\n  </div>\r\n</header>\r\n
3	2	t	.footer {\n  background-color: #1a1a1a;\n  color: #f5f5f5;\n  padding: 2.5rem 1rem;\n  font-family: 'Segoe UI', system-ui, sans-serif;\n}\n\n.footer-container {\n  max-width: 1280px;\n  margin: 0 auto;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n  gap: 2rem;\n  padding-bottom: 2.5rem;\n}\n\n.footer-brand {\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n.footer-nav ul {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n  gap: 0.75rem;\n}\n\n.footer-nav a {\n  color: #e0e0e0;\n  text-decoration: none;\n  display: block;\n  padding: 0.25rem 0;\n  transition: color 0.3s ease;\n}\n\n.footer-nav a:hover,\n.footer-nav a:focus {\n  color: #4dabf7;\n  text-decoration: underline;\n}\n\n.footer-contact {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n.footer-contact a {\n  color: #e0e0e0;\n  display: flex;\n  align-items: center;\n  gap: 0.75rem;\n  text-decoration: none;\n  transition: color 0.3s ease;\n}\n\n.footer-contact a:hover {\n  color: #4dabf7;\n}\n\n.footer-copyright {\n  display: block;\n  text-align: center;\n  margin-top: 2.5rem;\n  opacity: 0.7;\n  font-size: 0.875rem;\n}\n\n@media (max-width: 768px) {\n  .footer-container {\n    grid-template-columns: 1fr;\n    gap: 2.5rem;\n  }\n  \n  .footer-contact {\n    order: -1;\n  }\n}	<footer class="footer">\n  <div class="footer-container">\n    <section class="footer-brand" aria-label="Company information">\n      #LOGO#\n    </section>\n\n    <nav class="footer-nav" aria-label="Footer navigation">\n      #NAV#\n    </nav>\n\n    <div class="footer-contact" aria-label="Contact information">\n      #CONTACT#\n    </div>\n  </div>\n\n  <small class="footer-copyright">\n    &copy; 2023 Company Name. All rights reserved.\n  </small>\n</footer>
5	4	t	.content-container {\n  display: flex;\n  justify-content: center;\n  padding: 2rem 1rem;\n  margin: 0 auto;\n}\n\n.content-card {\n  background-color: #ffffff;\n  border-radius: 12px;\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);\n  max-width: 720px;\n  padding: 2rem;\n  width: 100%;\n  box-sizing: border-box;\n}\n\n.content-title {\n  color: #2d3748;\n  font-size: clamp(1.5rem, 2.5vw, 2rem);\n  margin-bottom: 1.5rem;\n  line-height: 1.3;\n}\n\n.content-text {\n  color: #4a5568;\n  font-size: 1.125rem;\n  line-height: 1.6;\n  margin-bottom: 1.5rem;\n}\n\n.content-button {\n  background-color: #4299e1;\n  border: none;\n  border-radius: 6px;\n  color: white;\n  cursor: pointer;\n  font-size: 1rem;\n  font-weight: 600;\n  padding: 0.75rem 1.5rem;\n  transition: background-color 0.3s ease;\n}\n\n.content-button:hover {\n  background-color: #3182ce;\n}\n\n@media (max-width: 480px) {\n  .content-card {\n    padding: 1.5rem;\n  }\n  \n  .content-button {\n    width: 100%;\n  }\n}	<main class="content-container">\r\n  <article class="content-card">\r\n    <h1 class="content-title">#TITLE#</h1>\r\n    <p class="content-text">#ARTICLE#</p>\r\n    <button class="content-button">#BTN#</button>\r\n  </article>\r\n</main>
6	5	t	1	1
\.


--
-- Data for Name: layout_variant_2; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.layout_variant_2 (id, template_lvl2_id, is_active, css_style, html) FROM stdin;
6	4	t	\r\n\r\n/* Логотип */\r\n.mega-nav__logo {\r\n  color: #61dafb;\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n}\r\n\r\n/* Список */\r\n.mega-nav__list {\r\n  display: flex;\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n  gap: 32px;\r\n  transition: max-height 0.3s ease;\r\n}\r\n\r\n/* Элемент */\r\n.mega-nav__item {\r\n  position: relative;\r\n}\r\n\r\n/* Ссылка */\r\n.mega-nav__item a {\r\n  text-decoration: none;\r\n  color: #375da4;\r\n  padding: 16px 0;\r\n  display: block;\r\n  transition: color 0.3s;\r\n}\r\n\r\n/* Активный пункт */\r\n.mega-nav__item.active a {\r\n  color: #8e2020;\r\n  font-weight: 600;\r\n}\r\n.mega-nav__item.active::after {\r\n  content: '';\r\n  position: absolute;\r\n  bottom: 8px;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 3px;\r\n  background: #61dafb;\r\n  border-radius: 2px;\r\n}\r\n\r\n/* Эффект при наведении */\r\n.mega-nav__item:hover a {\r\n  color: #ffffff;\r\n}\r\n.mega-nav__item:hover::after {\r\n  content: '';\r\n  position: absolute;\r\n  bottom: 8px;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 3px;\r\n  background: rgba(97, 218, 251, 0.7);\r\n  border-radius: 2px;\r\n}\r\n\r\n/* Кнопка-гамбургер */\r\n.mega-nav__toggle {\r\n  display: none;\r\n  background: none;\r\n  border: none;\r\n  font-size: 1.5rem;\r\n  color: #61dafb;\r\n  cursor: pointer;\r\n}\r\n\r\n/* Адаптив для мобильных */\r\n@media (max-width: 768px) {\r\n  .mega-nav__toggle {\r\n    display: block;\r\n  }\r\n  .mega-nav__list {\r\n    flex-direction: column;\r\n    top: 100%;\r\n    left: 0;\r\n    width: 100%;\r\n    background: #20232a;\r\n    max-height: 0;\r\n    overflow: hidden;\r\n  }\r\n  .mega-nav__item {\r\n    text-align: center;\r\n    border-bottom: 1px solid #282c34;\r\n  }\r\n  .mega-nav__toggle.active + .mega-nav__list {\r\n    max-height: 500px; /* достаточно для всех пунктов */\r\n  }\r\n}\r\n	<nav class="mega-nav">\r\n  <ul class="mega-nav__list">\r\n    <li class="mega-nav__item active"><a href="#">#BTN#</a></li>\r\n    <li class="mega-nav__item"><a href="#">#BTN#</a></li>\r\n    <li class="mega-nav__item"><a href="#">#BTN#</a></li>\r\n  </ul>\r\n  <button class="mega-nav__toggle">&#9776;</button>\r\n</nav>\r\n
8	6	t	.header-contacts {\r\n  display: flex;\r\n  gap: 16px;\r\n  align-items: center;\r\n  font-size: 0.95rem;\r\n}\r\n\r\n.header-contacts a {\r\n  color: #fff;\r\n  text-decoration: none;\r\n  background: #374151;\r\n  padding: 6px 12px;\r\n  border-radius: 8px;\r\n  transition: background 0.3s;\r\n}\r\n\r\n.header-contacts a:hover {\r\n  background: #2563eb;\r\n  color: #fff;\r\n}\r\n	<div class="header-contacts">\r\n  <a href="tel:+79991234567">+7 (999) 123-45-67</a>\r\n  <a href="tel:+79876543210">+7 (987) 654-32-10</a>\r\n</div>\r\n
9	4	t	.tab-nav ul {\r\n  display: flex;\r\n  border-bottom: 3px solid #e5e7eb;\r\n  padding: 0;\r\n  margin: 0;\r\n  list-style: none;\r\n}\r\n\r\n.tab-nav .tab {\r\n  margin-right: 12px;\r\n}\r\n\r\n.tab-nav .tab a {\r\n  display: inline-block;\r\n  padding: 12px 20px;\r\n  text-decoration: none;\r\n  color: #374151;\r\n  font-weight: 500;\r\n  border-radius: 6px 6px 0 0;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.tab-nav .tab.active a,\r\n.tab-nav .tab a:hover {\r\n  background-color: #ffffff;\r\n  border: 2px solid #3b82f6;\r\n  border-bottom: none;\r\n  color: #1d4ed8;\r\n  position: relative;\r\n  top: 2px;\r\n}\r\n	<nav class="tab-nav">\r\n  <ul>\r\n    <li class="tab active"><a href="#">#BTN#</a></li>\r\n    <li class="tab"><a href="#">#BTN#</a></li>\r\n    <li class="tab"><a href="#">#BTN#</a></li>\r\n    <li class="tab"><a href="#">#BTN#</a></li>\r\n  </ul>\r\n</nav>\r\n
10	7	t	.footer-nav {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: #111827;\r\n  color: #d1d5db;\r\n  padding: 40px 20px;\r\n  flex-wrap: wrap;\r\n  gap: 40px;\r\n}\r\n\r\n.footer-nav-section h4 {\r\n  font-size: 1rem;\r\n  margin-bottom: 10px;\r\n  color: #461616;\r\n}\r\n\r\n.footer-nav-section ul {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.footer-nav-section ul li {\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.footer-nav-section ul li a {\r\n  color: #9ca3af;\r\n  text-decoration: none;\r\n  transition: color 0.3s ease;\r\n}\r\n\r\n.footer-nav-section ul li a:hover {\r\n  color: #60a5fa;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .footer-nav {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n  }\r\n}\r\n	\r\n  <div class="footer-nav-section">\r\n    <h4>Компания</h4>\r\n    <ul>\r\n      <li><a href="#">О нас</a></li>\r\n      <li><a href="#">Карьера</a></li>\r\n      <li><a href="#">Блог</a></li>\r\n    </ul>\r\n  </div>\r\n
15	12	t	.article-card {\n  --primary-color: #2c3e50;\n  --accent-color: #3498db;\n  --text-light: #7f8c8d;\n  --border-color: #ecf0f1;\n  --spacing-xs: 0.75rem;\n  --spacing-sm: 1.25rem;\n  --spacing-md: 2.5rem;\n  \n  max-width: 768px;\n  margin: auto;\n  padding: var(--spacing-md);\n  font-family: 'Segoe UI', system-ui, sans-serif;\n  line-height: 1.7;\n  color: var(--primary-color);\n}\n\n.article-header {\n  padding-bottom: var(--spacing-sm);\n  border-bottom: 1px solid var(--border-color);\n}\n\n.meta-group {\n  display: flex;\n  gap: var(--spacing-xs);\n  font-size: 0.875rem;\n  color: var(--text-light);\n  margin-bottom: var(--spacing-sm);\n}\n\n.title {\n  font-size: clamp(1.75rem, 5vw, 2.5rem);\n  margin: 0.5em 0;\n  line-height: 1.2;\n}\n\n.author-info {\n  display: flex;\n  align-items: center;\n  gap: var(--spacing-xs);\n  margin-top: var(--spacing-sm);\n}\n\n.avatar {\n  border-radius: 50%;\n  object-fit: cover;\n}\n\n.author {\n  font-weight: 600;\n  margin: 0;\n}\n\n.role {\n  margin: 0;\n  font-size: 0.875rem;\n  color: var(--text-light);\n}\n\n.content {\n  padding-block: var(--spacing-md);\n}\n\n.content > * + * {\n  margin-top: 1.5rem;\n}\n\n.lead {\n  font-size: 1.25rem;\n  font-weight: 300;\n}\n\nh2 {\n  font-size: 1.5rem;\n}\n\nh3 {\n  font-size: 1.25rem;\n}\n\n.featured-image {\n  margin: 0;\n  margin-bottom: var(--spacing-md);\n}\n\n.featured-image img {\n  width: 100%;\n  height: auto;\n  border-radius: 8px;\n  aspect-ratio: 16/9;\n  object-fit: cover;\n}\n\n.article-footer {\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--spacing-sm);\n  justify-content: space-between;\n  align-items: center;\n  padding-top: var(--spacing-sm);\n  border-top: 1px solid var(--border-color);\n}\n\n.tag-group {\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--spacing-xs);\n}\n\n.tag {\n  font-size: 0.875rem;\n  background: #f8f9fa;\n  padding: 0.3rem 0.75rem;\n  border-radius: 20px;\n}\n\n.action-button {\n  background: transparent;\n  border: 1px solid var(--border-color);\n  border-radius: 50%;\n  width: 36px;\n  height: 36px;\n  display: grid;\n  place-items: center;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.action-button:hover {\n  background: #f8f9fa;\n}\n\n.icon {\n  width: 20px;\n  height: 20px;\n  stroke: currentColor;\n}\n\n@media (max-width: 576px) {\n  .article-card {\n    padding: var(--spacing-sm);\n  }\n  \n  .article-footer {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n}	<article class="article-card">\r\n  <header class="article-header">\r\n    <h1 class="title">Understanding Responsive Design Principles</h1>\r\n  </header>\r\n\r\n  <div class="content">\r\n    <h2>Core Principles</h2>\r\n    <p>Fluid grids, flexible images, and media queries form the foundation of responsive design. These elements work together to create...</p>\r\n    \r\n    <h3>Implementation Tips</h3>\r\n    <p>Start mobile-first, use relative units like REM/EM, and test across viewports. Remember that typography plays a crucial role...</p>\r\n  </div>\r\n\r\n</article>
\.


--
-- Data for Name: layout_variant_3; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.layout_variant_3 (id, template_lvl2_id, is_active, css_style, html) FROM stdin;
9	9	t	button {\r\n    background-color: gray;\r\n    padding:10px;\r\n    color: white;\r\n    border-radius: 10px;\r\n}	<button>Новый</button>
7	7	t	button {\r\n    color: red;\r\n    padding: 10px;\r\n    border-radius: 10px;\r\n}	<button>Купить всё</button>
10	10	t		ЛОГО
11	11	f	1	1
\.


--
-- Data for Name: lvl1; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.lvl1 (id, name, level) FROM stdin;
4	Шапка	1
79	Мейн	2
6	Футер	3
80	гал	1
\.


--
-- Data for Name: lvl2; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.lvl2 (id, name) FROM stdin;
7	Навигационный блок
8	Блок контактов
9	Нав подвала 
14	Статья
\.


--
-- Data for Name: lvl3; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.lvl3 (id, name) FROM stdin;
43	КНопочки
45	Кнопки табов
46	Лого
47	1
\.


--
-- Data for Name: placeholder_match; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.placeholder_match (id, code) FROM stdin;
3	#NAV#
5	#CONTACT#
\.


--
-- Data for Name: placeholder_match_atoms; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.placeholder_match_atoms (id, code) FROM stdin;
2	#BTN#
3	#LOGO#
\.


--
-- Data for Name: placeholder_match_lvl2; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.placeholder_match_lvl2 (placeholder_match_id, lvl2_id) FROM stdin;
3	7
5	8
\.


--
-- Data for Name: placeholder_match_lvl3; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.placeholder_match_lvl3 (placeholder_match_atoms_id, lvl3_id) FROM stdin;
2	43
2	45
3	46
\.


--
-- Data for Name: section; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.section (id, discipline_id, name) FROM stdin;
\.


--
-- Data for Name: task; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.task (id, topic_id, name, task_type_id, course_variant_id) FROM stdin;
\.


--
-- Data for Name: task_generator; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.task_generator (id, task_id, generator_id) FROM stdin;
\.


--
-- Data for Name: task_type; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.task_type (id, name) FROM stdin;
\.


--
-- Data for Name: template; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.template (id, name) FROM stdin;
1	Первый
2	второй 
\.


--
-- Data for Name: template_lvl1; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.template_lvl1 (id, template_id, lvl1_id, always_eat) FROM stdin;
4	1	79	t
1	1	4	t
2	1	6	t
5	1	80	f
\.


--
-- Data for Name: template_lvl2; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.template_lvl2 (id, template_lvl1_id, lvl2_id, max_count_y, min_count_y, max_count_x, min_count_x, always_eat) FROM stdin;
4	1	7	1	\N	1	1	f
5	2	7	1	\N	1	1	f
6	1	8	1	\N	1	1	f
7	2	9	1	\N	1	1	f
12	4	14	1	\N	1	1	f
\.


--
-- Data for Name: template_lvl3; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.template_lvl3 (id, template_lvl2_id, lvl3_id, always_eat) FROM stdin;
7	4	43	f
9	7	45	f
10	4	46	f
11	4	47	f
\.


--
-- Data for Name: topic; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.topic (id, section_id, name) FROM stdin;
\.


--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.users (id, username, password_hash) FROM stdin;
\.


--
-- Name: course_variant_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.course_variant_id_seq', 1, false);


--
-- Name: discipline_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.discipline_id_seq', 1, false);


--
-- Name: generation_result_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.generation_result_id_seq', 1, false);


--
-- Name: generation_variant_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.generation_variant_id_seq', 1, false);


--
-- Name: generator_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.generator_id_seq', 1, false);


--
-- Name: layout_variant_1_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.layout_variant_1_id_seq', 6, true);


--
-- Name: layout_variant_2_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.layout_variant_2_id_seq', 15, true);


--
-- Name: layout_variant_3_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.layout_variant_3_id_seq', 11, true);


--
-- Name: lvl1_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.lvl1_id_seq', 80, true);


--
-- Name: lvl2_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.lvl2_id_seq', 14, true);


--
-- Name: lvl3_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.lvl3_id_seq', 47, true);


--
-- Name: placeholder_match_atoms_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.placeholder_match_atoms_id_seq', 3, true);


--
-- Name: placeholder_match_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.placeholder_match_id_seq', 5, true);


--
-- Name: section_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.section_id_seq', 1, false);


--
-- Name: task_generator_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.task_generator_id_seq', 1, false);


--
-- Name: task_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.task_id_seq', 1, false);


--
-- Name: task_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.task_type_id_seq', 1, false);


--
-- Name: template_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.template_id_seq', 2, true);


--
-- Name: template_lvl1_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.template_lvl1_id_seq', 5, true);


--
-- Name: template_lvl2_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.template_lvl2_id_seq', 12, true);


--
-- Name: template_lvl3_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.template_lvl3_id_seq', 11, true);


--
-- Name: topic_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.topic_id_seq', 1, false);


--
-- Name: users_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.users_id_seq', 1, false);


--
-- Name: alembic_version alembic_version_pkc; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.alembic_version
    ADD CONSTRAINT alembic_version_pkc PRIMARY KEY (version_num);


--
-- Name: course_variant course_variant_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.course_variant
    ADD CONSTRAINT course_variant_pkey PRIMARY KEY (id);


--
-- Name: discipline discipline_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.discipline
    ADD CONSTRAINT discipline_name_key UNIQUE (name);


--
-- Name: discipline discipline_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.discipline
    ADD CONSTRAINT discipline_pkey PRIMARY KEY (id);


--
-- Name: generation_result generation_result_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.generation_result
    ADD CONSTRAINT generation_result_pkey PRIMARY KEY (id);


--
-- Name: generation_variant generation_variant_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.generation_variant
    ADD CONSTRAINT generation_variant_pkey PRIMARY KEY (id);


--
-- Name: generator generator_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.generator
    ADD CONSTRAINT generator_pkey PRIMARY KEY (id);


--
-- Name: layout_variant_1 layout_variant_1_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.layout_variant_1
    ADD CONSTRAINT layout_variant_1_pkey PRIMARY KEY (id);


--
-- Name: layout_variant_2 layout_variant_2_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.layout_variant_2
    ADD CONSTRAINT layout_variant_2_pkey PRIMARY KEY (id);


--
-- Name: layout_variant_3 layout_variant_3_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.layout_variant_3
    ADD CONSTRAINT layout_variant_3_pkey PRIMARY KEY (id);


--
-- Name: lvl1 lvl1_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lvl1
    ADD CONSTRAINT lvl1_pkey PRIMARY KEY (id);


--
-- Name: lvl2 lvl2_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lvl2
    ADD CONSTRAINT lvl2_pkey PRIMARY KEY (id);


--
-- Name: lvl3 lvl3_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lvl3
    ADD CONSTRAINT lvl3_pkey PRIMARY KEY (id);


--
-- Name: placeholder_match_atoms placeholder_match_atoms_code_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.placeholder_match_atoms
    ADD CONSTRAINT placeholder_match_atoms_code_key UNIQUE (code);


--
-- Name: placeholder_match_atoms placeholder_match_atoms_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.placeholder_match_atoms
    ADD CONSTRAINT placeholder_match_atoms_pkey PRIMARY KEY (id);


--
-- Name: placeholder_match placeholder_match_code_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.placeholder_match
    ADD CONSTRAINT placeholder_match_code_key UNIQUE (code);


--
-- Name: placeholder_match placeholder_match_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.placeholder_match
    ADD CONSTRAINT placeholder_match_pkey PRIMARY KEY (id);


--
-- Name: section section_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.section
    ADD CONSTRAINT section_name_key UNIQUE (name);


--
-- Name: section section_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.section
    ADD CONSTRAINT section_pkey PRIMARY KEY (id);


--
-- Name: task_generator task_generator_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.task_generator
    ADD CONSTRAINT task_generator_pkey PRIMARY KEY (id);


--
-- Name: task task_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.task
    ADD CONSTRAINT task_pkey PRIMARY KEY (id);


--
-- Name: task_type task_type_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.task_type
    ADD CONSTRAINT task_type_name_key UNIQUE (name);


--
-- Name: task_type task_type_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.task_type
    ADD CONSTRAINT task_type_pkey PRIMARY KEY (id);


--
-- Name: template_lvl1 template_lvl1_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.template_lvl1
    ADD CONSTRAINT template_lvl1_pkey PRIMARY KEY (id);


--
-- Name: template_lvl2 template_lvl2_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.template_lvl2
    ADD CONSTRAINT template_lvl2_pkey PRIMARY KEY (id);


--
-- Name: template_lvl3 template_lvl3_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.template_lvl3
    ADD CONSTRAINT template_lvl3_pkey PRIMARY KEY (id);


--
-- Name: template template_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.template
    ADD CONSTRAINT template_pkey PRIMARY KEY (id);


--
-- Name: topic topic_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.topic
    ADD CONSTRAINT topic_pkey PRIMARY KEY (id);


--
-- Name: users users_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_pkey PRIMARY KEY (id);


--
-- Name: users users_username_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_username_key UNIQUE (username);


--
-- Name: course_variant course_variant_discipline_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.course_variant
    ADD CONSTRAINT course_variant_discipline_id_fkey FOREIGN KEY (discipline_id) REFERENCES public.discipline(id);


--
-- Name: generation_result generation_result_task_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.generation_result
    ADD CONSTRAINT generation_result_task_id_fkey FOREIGN KEY (task_id) REFERENCES public.task(id);


--
-- Name: generation_variant generation_variant_result_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.generation_variant
    ADD CONSTRAINT generation_variant_result_id_fkey FOREIGN KEY (result_id) REFERENCES public.generation_result(id);


--
-- Name: generator generator_topic_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.generator
    ADD CONSTRAINT generator_topic_id_fkey FOREIGN KEY (topic_id) REFERENCES public.topic(id);


--
-- Name: layout_variant_1 layout_variant_1_template_lvl1_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.layout_variant_1
    ADD CONSTRAINT layout_variant_1_template_lvl1_id_fkey FOREIGN KEY (template_lvl1_id) REFERENCES public.template_lvl1(id);


--
-- Name: layout_variant_2 layout_variant_2_template_lvl2_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.layout_variant_2
    ADD CONSTRAINT layout_variant_2_template_lvl2_id_fkey FOREIGN KEY (template_lvl2_id) REFERENCES public.template_lvl2(id);


--
-- Name: layout_variant_3 layout_variant_3_template_lvl2_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.layout_variant_3
    ADD CONSTRAINT layout_variant_3_template_lvl2_id_fkey FOREIGN KEY (template_lvl2_id) REFERENCES public.template_lvl3(id);


--
-- Name: placeholder_match_lvl2 placeholder_match_lvl2_lvl2_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.placeholder_match_lvl2
    ADD CONSTRAINT placeholder_match_lvl2_lvl2_id_fkey FOREIGN KEY (lvl2_id) REFERENCES public.lvl2(id);


--
-- Name: placeholder_match_lvl2 placeholder_match_lvl2_placeholder_match_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.placeholder_match_lvl2
    ADD CONSTRAINT placeholder_match_lvl2_placeholder_match_id_fkey FOREIGN KEY (placeholder_match_id) REFERENCES public.placeholder_match(id);


--
-- Name: placeholder_match_lvl3 placeholder_match_lvl3_lvl3_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.placeholder_match_lvl3
    ADD CONSTRAINT placeholder_match_lvl3_lvl3_id_fkey FOREIGN KEY (lvl3_id) REFERENCES public.lvl3(id);


--
-- Name: placeholder_match_lvl3 placeholder_match_lvl3_placeholder_match_atoms_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.placeholder_match_lvl3
    ADD CONSTRAINT placeholder_match_lvl3_placeholder_match_atoms_id_fkey FOREIGN KEY (placeholder_match_atoms_id) REFERENCES public.placeholder_match_atoms(id);


--
-- Name: section section_discipline_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.section
    ADD CONSTRAINT section_discipline_id_fkey FOREIGN KEY (discipline_id) REFERENCES public.discipline(id);


--
-- Name: task task_course_variant_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.task
    ADD CONSTRAINT task_course_variant_id_fkey FOREIGN KEY (course_variant_id) REFERENCES public.course_variant(id);


--
-- Name: task_generator task_generator_generator_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.task_generator
    ADD CONSTRAINT task_generator_generator_id_fkey FOREIGN KEY (generator_id) REFERENCES public.generator(id);


--
-- Name: task_generator task_generator_task_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.task_generator
    ADD CONSTRAINT task_generator_task_id_fkey FOREIGN KEY (task_id) REFERENCES public.task(id);


--
-- Name: task task_task_type_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.task
    ADD CONSTRAINT task_task_type_id_fkey FOREIGN KEY (task_type_id) REFERENCES public.task_type(id);


--
-- Name: task task_topic_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.task
    ADD CONSTRAINT task_topic_id_fkey FOREIGN KEY (topic_id) REFERENCES public.topic(id);


--
-- Name: template_lvl1 template_lvl1_lvl1_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.template_lvl1
    ADD CONSTRAINT template_lvl1_lvl1_id_fkey FOREIGN KEY (lvl1_id) REFERENCES public.lvl1(id);


--
-- Name: template_lvl1 template_lvl1_template_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.template_lvl1
    ADD CONSTRAINT template_lvl1_template_id_fkey FOREIGN KEY (template_id) REFERENCES public.template(id);


--
-- Name: template_lvl2 template_lvl2_lvl2_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.template_lvl2
    ADD CONSTRAINT template_lvl2_lvl2_id_fkey FOREIGN KEY (lvl2_id) REFERENCES public.lvl2(id);


--
-- Name: template_lvl2 template_lvl2_template_lvl1_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.template_lvl2
    ADD CONSTRAINT template_lvl2_template_lvl1_id_fkey FOREIGN KEY (template_lvl1_id) REFERENCES public.template_lvl1(id);


--
-- Name: template_lvl3 template_lvl3_lvl3_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.template_lvl3
    ADD CONSTRAINT template_lvl3_lvl3_id_fkey FOREIGN KEY (lvl3_id) REFERENCES public.lvl3(id);


--
-- Name: template_lvl3 template_lvl3_template_lvl2_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.template_lvl3
    ADD CONSTRAINT template_lvl3_template_lvl2_id_fkey FOREIGN KEY (template_lvl2_id) REFERENCES public.template_lvl2(id);


--
-- Name: topic topic_section_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.topic
    ADD CONSTRAINT topic_section_id_fkey FOREIGN KEY (section_id) REFERENCES public.section(id);


--
-- PostgreSQL database dump complete
--

--
-- Database "postgres" dump
--

--
-- PostgreSQL database dump
--

-- Dumped from database version 13.10 (Debian 13.10-1.pgdg110+1)
-- Dumped by pg_dump version 13.10 (Debian 13.10-1.pgdg110+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

DROP DATABASE postgres;
--
-- Name: postgres; Type: DATABASE; Schema: -; Owner: postgres
--

CREATE DATABASE postgres WITH TEMPLATE = template0 ENCODING = 'UTF8' LOCALE = 'en_US.utf8';


ALTER DATABASE postgres OWNER TO postgres;

\connect postgres

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: DATABASE postgres; Type: COMMENT; Schema: -; Owner: postgres
--

COMMENT ON DATABASE postgres IS 'default administrative connection database';


--
-- PostgreSQL database dump complete
--

--
-- PostgreSQL database cluster dump complete
--

